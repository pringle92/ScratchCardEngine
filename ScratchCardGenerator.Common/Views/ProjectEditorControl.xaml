<UserControl x:Class="ScratchCardGenerator.Common.Views.ProjectEditorControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:ScratchCardGenerator.Common.Views"
             xmlns:models="clr-namespace:ScratchCardGenerator.Common.Models"
             xmlns:converters="clr-namespace:ScratchCardGenerator.Common.Converters"
             xmlns:helpers="clr-namespace:ScratchCardGenerator.Common.Helpers"
             xmlns:behaviours="clr-namespace:ScratchCardGenerator.Common.Behaviours"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1200"
             x:Name="RootControl">
    <UserControl.Resources>
        <converters:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
        <converters:EnumValueToInstanceConverter x:Key="EnumValueToInstanceConverter"/>
        <!-- Converters and other resources -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:ObjectToBooleanConverter x:Key="ObjectToBooleanConverter"/>
        <converters:StringToQrCodeImageConverter x:Key="StringToQrCodeImageConverter"/>
        <converters:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter"/>
        <converters:CountToVisibilityConverter x:Key="CountToVisibilityConverter"/>

        <helpers:BindingProxy x:Key="Proxy" Data="{Binding}"/>

        <!-- ObjectDataProvider to expose the values of our new enum for the ComboBox -->
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="NearMissWeightingEnumValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:NearMissWeighting"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <!-- Other resources like Brushes and Styles -->
        <DrawingBrush x:Key="GridBrush" Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <GeometryDrawing Brush="{DynamicResource BorderBrush}">
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry Rect="0,0,1,1" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <Style x:Key="PlaceholderTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="2"/>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}"/>
                            <TextBlock x:Name="Placeholder"
                                       Text="{TemplateBinding Tag}"
                                       Foreground="{DynamicResource SubtleTextBrush}"
                                       Margin="5,2"
                                       FontStyle="Italic"
                                       Visibility="Collapsed"
                                       IsHitTestVisible="False"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                    <Condition Property="IsFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Placeholder" Property="Visibility" Value="Visible"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="DragDropPreviewTemplate">
            <Border Background="{DynamicResource SecondaryBackgroundBrush}" 
                    BorderBrush="{DynamicResource AccentBrush}" 
                    BorderThickness="1" 
                    CornerRadius="3" 
                    Padding="10" 
                    Opacity="0.7">
                <StackPanel>
                    <TextBlock Text="{Binding ModuleName}" FontWeight="Bold" />
                    <TextBlock Text="{Binding GameNumber, StringFormat='(Game {0})'}" Foreground="{DynamicResource SubtleTextBrush}" FontSize="10" />
                </StackPanel>
            </Border>
        </DataTemplate>

        <Style x:Key="EnumDescriptionComboBoxStyle" TargetType="ComboBox">
          <Setter Property="Focusable" Value="True"/>
          <Setter Property="ItemTemplate">
            <Setter.Value>
              <DataTemplate>
                <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" Foreground="{DynamicResource SubtleTextBrush}"/>
              </DataTemplate>
            </Setter.Value>
          </Setter>
          <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
          <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
          <Setter Property="Padding" Value="4,2"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="ComboBox">
                <Grid>
                  <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" SnapsToDevicePixels="True"/>

                  <ContentPresenter x:Name="ContentSite"
                                    Content="{TemplateBinding SelectedItem}"
                                    ContentTemplate="{TemplateBinding ItemTemplate}"
                                    Margin="6,2,24,2"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    RecognizesAccessKey="True"/>

                  <ToggleButton x:Name="DropDownToggle"
                                Focusable="False"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Width="20"
                                Background="Transparent"
                                BorderThickness="0"
                                Margin="0">
                    <Path Width="10" Height="6" Stretch="Uniform" Fill="{DynamicResource SubtleTextBrush}" Data="M 0 0 L 5 5 L 10 0 Z" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                  </ToggleButton>

                  <Popup x:Name="PART_Popup"
                         Placement="Bottom"
                         IsOpen="{TemplateBinding IsDropDownOpen}"
                         AllowsTransparency="True"
                         Focusable="False"
                         PopupAnimation="Slide">
                    <Border Background="{DynamicResource SecondaryBackgroundBrush}"
                            BorderBrush="{DynamicResource BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="2"
                            SnapsToDevicePixels="True">
                      <ScrollViewer Margin="2" SnapsToDevicePixels="True" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                      </ScrollViewer>
                    </Border>
                  </Popup>
                </Grid>

                <ControlTemplate.Triggers>
                  <Trigger Property="HasItems" Value="false">
                    <Setter TargetName="PART_Popup" Property="MinHeight" Value="60"/>
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource SubtleTextBrush}"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>

    </UserControl.Resources>

    <Grid AllowDrop="True" DragOver="RootGrid_DragOver">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.2*" MinWidth="350"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="2*" MinWidth="500"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="1.5*" MinWidth="400"/>
        </Grid.ColumnDefinitions>

        <ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto" Padding="5">
            <DockPanel>
                <GroupBox Header="Job Settings" DockPanel.Dock="Top" ToolTip="Core settings that define the entire scratch card job.">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="Job Name:" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="0" Grid.Column="1" Margin="2" Text="{Binding CurrentProject.Settings.JobName, UpdateSourceTrigger=PropertyChanged}" ToolTip="The full, descriptive name for this job (e.g., 'Secret Santa 2025'). This is used in report headers and folder names." behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding UndoRedoService}"/>
                        <Label Grid.Row="1" Grid.Column="0" Content="Job No:" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Margin="2" Text="{Binding CurrentProject.Settings.JobNo, UpdateSourceTrigger=PropertyChanged}" ToolTip="The main job number (e.g., '356287'). Used for folder names and security codes." behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding UndoRedoService}"/>
                        <Label Grid.Row="2" Grid.Column="0" Content="Job Code:" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Margin="2" Text="{Binding CurrentProject.Settings.JobCode, UpdateSourceTrigger=PropertyChanged}" ToolTip="A short, unique code for the job (e.g., 'COP00305'). This is used extensively in file naming." behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding UndoRedoService}"/>
                        <Label Grid.Row="3" Grid.Column="0" Content="Client:" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="3" Grid.Column="1" Margin="2" Text="{Binding CurrentProject.Settings.Client, UpdateSourceTrigger=PropertyChanged}" ToolTip="The name of the client for whom the job is being produced." behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding UndoRedoService}"/>
                        <Label Grid.Row="4" Grid.Column="0" Content="Product Barcode:" VerticalAlignment="Center" Visibility="{Binding CurrentProject.Settings.IsPoundlandGame, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"/>
                        <TextBox Grid.Row="4" Grid.Column="1" Margin="2" Text="{Binding CurrentProject.Settings.ProductBarcode, UpdateSourceTrigger=PropertyChanged}" ToolTip="The main EAN-13 barcode for the product itself. Not applicable to Poundland games." Visibility="{Binding CurrentProject.Settings.IsPoundlandGame, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding UndoRedoService}"/>
                        <Label Grid.Row="5" Grid.Column="0" Content="Loser Barcode:" VerticalAlignment="Center" Visibility="{Binding CurrentProject.Settings.IsPoundlandGame, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"/>
                        <TextBox Grid.Row="5" Grid.Column="1" Margin="2" Text="{Binding CurrentProject.Settings.LoserBarcode, UpdateSourceTrigger=PropertyChanged}" ToolTip="The barcode to be used on all non-winning tickets. Not applicable to Poundland games." Visibility="{Binding CurrentProject.Settings.IsPoundlandGame, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding UndoRedoService}"/>
                        <Label Grid.Row="6" Grid.Column="0" Content="Cards/Pack:" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="6" Grid.Column="1" Margin="2" Text="{Binding CurrentProject.Settings.CardsPerPack, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="The number of individual scratch cards in a single printed pack. This is a critical value for prize distribution." behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding UndoRedoService}"/>
                        <Label Grid.Row="7" Grid.Column="0" Content="Live Packs:" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="7" Grid.Column="1" Margin="2" Text="{Binding CurrentProject.Settings.TotalPacks, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="The total number of packs that will be sold to the public. This is used to calculate the 'Live Run' statistics." behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding UndoRedoService}"/>
                        <Label Grid.Row="8" Grid.Column="0" Content="No. Out:" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="8" Grid.Column="1" Margin="2" Text="{Binding CurrentProject.Settings.NoOut, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="A printing industry term for the number of items on a single sheet. This, along with Live Packs, determines the total 'Print Run' size, including extras for setup and waste." behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding UndoRedoService}"/>
                        <Label Grid.Row="9" Grid.Column="0" Content="No. of Common Packs:" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="9" Grid.Column="1" Margin="2" Text="{Binding CurrentProject.Settings.NoComPack, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="The number of unique low-value winner (LVW) pack layouts to generate. The contents of these packs are repeated to create the full print run." behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding UndoRedoService}"/>
                        <Label Grid.Row="10" Grid.Column="0" Content="Ticket Price:" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="10" Grid.Column="1" Margin="2" Text="{Binding CurrentProject.Settings.TicketSalePrice, UpdateSourceTrigger=PropertyChanged, StringFormat=C, ConverterCulture=en-GB, ValidatesOnDataErrors=True}" ToolTip="The sale price of a single ticket. Used to calculate total potential revenue and payout percentages." behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding UndoRedoService}"/>
                        <Label Grid.Row="11" Grid.Column="0" Content="End Date:" VerticalAlignment="Center"/>
                        <DatePicker Grid.Row="11" Grid.Column="1" Margin="2" SelectedDate="{Binding CurrentProject.Settings.EndDate, UpdateSourceTrigger=PropertyChanged}" ToolTip="The final date for prize redemption. This is included in some report files."/>
                        <Label Grid.Row="12" Grid.Column="0" Content="Near-Miss Weighting:" VerticalAlignment="Center"/>
                        <ComboBox Grid.Row="12" Grid.Column="1" Margin="2"
                                  ItemsSource="{Binding Source={StaticResource NearMissWeightingEnumValues}}"
                                  SelectedItem="{Binding LosingTicketNearMissWeighting, 
                                                       Converter={StaticResource EnumValueToInstanceConverter}, 
                                                       ConverterParameter={StaticResource NearMissWeightingEnumValues}, 
                                                       Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  ToolTip="Controls how many near-miss sets are generated on losing tickets."
                                  Style="{StaticResource EnumDescriptionComboBoxStyle}"
                                  Background="{DynamicResource SecondaryBackgroundBrush}"
                                  Foreground="{DynamicResource SubtleTextBrush}" />

                        <CheckBox Grid.Row="13" Grid.Column="1" Margin="5" 
                                  Content="Favour High-Value Near Misses" 
                                  IsChecked="{Binding CurrentProject.Settings.FavourHighValueNearMisses}"
                                  ToolTip="If checked, There is a 25% chance that one of the near-miss sets on a losing ticket will be prioritised to be a high-value prize, making losing tickets more engaging."/>

                        <CheckBox Grid.Row="14" Grid.Column="0" Grid.ColumnSpan="2" Content="Games Aware" Margin="5" IsChecked="{Binding CurrentProject.Settings.GamesAware}" ToolTip="If checked, the generation logic actively tries to prevent near-miss combinations between different game modules on the same ticket. This is mandatory and forced ON if two or more 'Match Symbol to Prize' games are used.">
                            <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsGamesAwareForcedOn}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>

                        <CheckBox Grid.Row="15" Grid.Column="0" Grid.ColumnSpan="2" x:Name="PoundlandCheckBox" Content="Is Poundland Game" Margin="5" IsChecked="{Binding CurrentProject.Settings.IsPoundlandGame}" ToolTip="If checked, enables a special workflow for Poundland jobs. This will hide standard barcode fields and generate Poundland-specific redemption files."/>

                        <StackPanel Grid.Row="16" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="5,0,0,0">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=PoundlandCheckBox, Path=IsChecked}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <Label Content="Barcode Prefix:" VerticalAlignment="Center"/>
                            <TextBox Text="{Binding CurrentProject.Settings.PoundlandBarcodePrefix, UpdateSourceTrigger=PropertyChanged}" Width="100" Margin="2" ToolTip="The configurable prefix for the Poundland barcode. A 3-digit prefix (e.g., 310) will result in a 16-digit barcode." behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding UndoRedoService}"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>

                <GroupBox Header="Security Settings" DockPanel.Dock="Top" ToolTip="Paths to the files containing security codes for generation. The two schemes (6-digit vs 3+7 digit) are mutually exclusive.">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0" IsEnabled="{Binding IsThreeAndSevenDigitSecurityEnabled}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Margin="2" Text="{Binding CurrentProject.Security.ThreeDigitCodeFilePath}" IsReadOnly="True" ToolTip="The full path to the 3-digit security code file (.rnd)." Style="{StaticResource PlaceholderTextBoxStyle}" Tag="Path to 3-Digit .rnd file..."/>
                                <Button Grid.Column="1" Content="Browse..." Command="{Binding BrowseThreeDigitCommand}" ToolTip="Browse for the 3-digit security code file."/>
                                <Button Grid.Column="2" Content="Clear" Command="{Binding ClearThreeDigitCommand}" ToolTip="Clear the 3-digit security file path." Margin="2,0,0,0"/>
                            </Grid>
                        </Grid>

                        <Grid Grid.Row="1" IsEnabled="{Binding IsThreeAndSevenDigitSecurityEnabled}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Margin="2" Text="{Binding CurrentProject.Security.SevenDigitCodeFilePath}" IsReadOnly="True" ToolTip="The full path to the 7-digit security code file (.rnd)." Style="{StaticResource PlaceholderTextBoxStyle}" Tag="Path to 7-Digit .rnd file..."/>
                                <Button Grid.Column="1" Content="Browse..." Command="{Binding BrowseSevenDigitCommand}" ToolTip="Browse for the 7-digit security code file."/>
                                <Button Grid.Column="2" Content="Clear" Command="{Binding ClearSevenDigitCommand}" ToolTip="Clear the 7-digit security file path." Margin="2,0,0,0"/>
                            </Grid>
                        </Grid>

                        <Grid Grid.Row="2" IsEnabled="{Binding IsSixDigitSecurityEnabled}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Margin="2" Text="{Binding CurrentProject.Security.SixDigitCodeFilePath}" IsReadOnly="True" ToolTip="The full path to the 6-digit security code file (.rnd)." Style="{StaticResource PlaceholderTextBoxStyle}" Tag="Path to 6-Digit .rnd file..."/>
                                <Button Grid.Column="1" Content="Browse..." Command="{Binding BrowseSixDigitCommand}" ToolTip="Browse for the 6-digit security code file."/>
                                <Button Grid.Column="2" Content="Clear" Command="{Binding ClearSixDigitCommand}" ToolTip="Clear the 6-digit security file path." Margin="2,0,0,0"/>
                            </Grid>
                        </Grid>
                    </Grid>
                </GroupBox>
                <GroupBox Header="Game Analysis" DockPanel.Dock="Top" ToolTip="A live summary of game statistics based on the current settings. 'Live Run' is for packs sold to the public. 'Print Run' includes extras for printing.">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="1" Text="Live Run" FontWeight="Bold" HorizontalAlignment="Center"/>
                        <TextBlock Grid.Row="0" Grid.Column="2" Text="Print Run" FontWeight="Bold" HorizontalAlignment="Center"/>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Total Tickets:" Margin="2" FontWeight="SemiBold"/>
                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding LiveTotalTickets, StringFormat={}{0:N0}}" HorizontalAlignment="Center" Margin="2"/>
                        <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding PrintTotalTickets, StringFormat={}{0:N0}}" HorizontalAlignment="Center" Margin="2"/>
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="LVW Winners:" Margin="2" FontWeight="SemiBold"/>
                        <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding LiveLvwWinners, StringFormat={}{0:N0}}" HorizontalAlignment="Center" Margin="2"/>
                        <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding PrintLvwWinners, StringFormat={}{0:N0}}" HorizontalAlignment="Center" Margin="2"/>
                        <TextBlock Grid.Row="3" Grid.Column="0" Text="HVW Winners:" Margin="2" FontWeight="SemiBold"/>
                        <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding LiveHvwWinners, StringFormat={}{0:N0}}" HorizontalAlignment="Center" Margin="2"/>
                        <TextBlock Grid.Row="3" Grid.Column="2" Text="{Binding PrintHvwWinners, StringFormat={}{0:N0}}" HorizontalAlignment="Center" Margin="2"/>
                        <TextBlock Grid.Row="4" Grid.Column="0" Text="Total Winners:" Margin="2" FontWeight="Bold"/>
                        <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding LiveTotalWinners, StringFormat={}{0:N0}}" HorizontalAlignment="Center" Margin="2" FontWeight="Bold"/>
                        <TextBlock Grid.Row="4" Grid.Column="2" Text="{Binding PrintTotalWinners, StringFormat={}{0:N0}}" HorizontalAlignment="Center" Margin="2" FontWeight="Bold"/>
                        <TextBlock Grid.Row="5" Grid.Column="0" Text="Total Sales:" Margin="2" FontWeight="SemiBold"/>
                        <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding LiveTotalSales, StringFormat=C, ConverterCulture=en-GB}" HorizontalAlignment="Center" Margin="2"/>
                        <TextBlock Grid.Row="5" Grid.Column="2" Text="{Binding PrintTotalSales, StringFormat=C, ConverterCulture=en-GB}" HorizontalAlignment="Center" Margin="2"/>
                        <TextBlock Grid.Row="6" Grid.Column="0" Text="Prize Fund:" Margin="2" FontWeight="SemiBold"/>
                        <TextBlock Grid.Row="6" Grid.Column="1" Text="{Binding LiveTotalPrizeFund, StringFormat=C, ConverterCulture=en-GB}" HorizontalAlignment="Center" Margin="2"/>
                        <TextBlock Grid.Row="6" Grid.Column="2" Text="{Binding PrintTotalPrizeFund, StringFormat=C, ConverterCulture=en-GB}" HorizontalAlignment="Center" Margin="2"/>
                        <TextBlock Grid.Row="7" Grid.Column="0" Text="Odds:" Margin="2" FontWeight="SemiBold"/>
                        <TextBlock Grid.Row="7" Grid.Column="1" Text="{Binding LiveOdds}" HorizontalAlignment="Center" Margin="2"/>
                        <TextBlock Grid.Row="7" Grid.Column="2" Text="{Binding PrintOdds}" HorizontalAlignment="Center" Margin="2"/>
                        <TextBlock Grid.Row="8" Grid.Column="0" Text="Payout %:" Margin="2" FontWeight="SemiBold"/>
                        <TextBlock Grid.Row="8" Grid.Column="1" Text="{Binding LivePayoutPercentage, StringFormat={}{0:F2}%}" HorizontalAlignment="Center" Margin="2"/>
                        <TextBlock Grid.Row="8" Grid.Column="2" Text="{Binding PrintPayoutPercentage, StringFormat={}{0:F2}%}" HorizontalAlignment="Center" Margin="2"/>
                    </Grid>
                </GroupBox>
                <GroupBox DockPanel.Dock="Top" Margin="0,5,0,0"
                          BorderBrush="Orange"
                          ToolTip="Displays real-time validation errors and warnings for the current project."
                          Visibility="{Binding ValidationIssues.Count, Converter={StaticResource CountToVisibilityConverter}}">
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Project Issues" VerticalAlignment="Center"/>
                            <CheckBox IsChecked="{Binding ShowWarnings}" Content="Show Warnings" 
                                      Margin="15,0,0,0" VerticalAlignment="Center"
                                      ToolTip="Show or hide non-critical warning messages."/>
                        </StackPanel>
                    </GroupBox.Header>

                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled"
                                  Visibility="{Binding ElementName=IssuesItemsControl, Path=HasItems, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <ItemsControl x:Name="IssuesItemsControl" ItemsSource="{Binding FilteredValidationIssues}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border BorderThickness="0,0,0,1" BorderBrush="{DynamicResource BorderBrush}" Padding="4">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="ToolTip" Value="Warning: This is a suggestion or a non-critical issue."/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Severity}" Value="Error">
                                                        <Setter Property="ToolTip" Value="Error: This issue will likely cause generation to fail."/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>

                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="!" FontWeight="Bold" Margin="5,0" VerticalAlignment="Center">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Foreground" Value="Orange"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Severity}" Value="Error">
                                                                <Setter Property="Foreground" Value="Red"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <TextBlock Text="{Binding Message}" TextWrapping="NoWrap" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </GroupBox>


            </DockPanel>
        </ScrollViewer>

        <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />

        <TabControl Grid.Column="2" Margin="5">
            <TabItem Header="Prize Tiers" ToolTip="Define the prize structure for the game. Edit cells directly in the grid.">
                <DockPanel>
                    <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">
                        <Button Content="Import Prizes..." Command="{Binding ImportPrizesCommand}" Margin="5,0" ToolTip="Replaces the current prize list from a .json file."/>
                        <Button Content="Export Prizes..." Command="{Binding ExportPrizesCommand}" Margin="5,0" ToolTip="Saves the current prize list to a .json file."/>
                        <Button Content="Add Prize" Command="{Binding AddPrizeTierCommand}" Margin="5,0" ToolTip="Adds a new prize tier to the list."/>
                        <Button Content="Remove Selected" Command="{Binding RemovePrizeTierCommand}" CommandParameter="{Binding SelectedItem, ElementName=PrizesGrid}" ToolTip="Removes the currently selected prize tier."/>
                    </StackPanel>
                    <DataGrid x:Name="PrizesGrid" AutoGenerateColumns="False" ItemsSource="{Binding WinnablePrizeTiers}" CellEditEnding="DataGrid_CellEditEnding" CanUserAddRows="False" PreviewKeyDown="DataGrid_PreviewKeyDown">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width="Auto" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Display Text" Binding="{Binding DisplayText}" Width="*"/>
                            <DataGridTextColumn Header="Value (£)" Binding="{Binding Value, StringFormat=F2}" Width="Auto"/>
                            <DataGridTextColumn Header="Text Code" Binding="{Binding TextCode}" Width="Auto"/>
                            <!-- BUG FIX 2: Corrected the binding path from 'DataContext.CurrentProject...' to 'Data.CurrentProject...' to correctly use the proxy. -->
                            <DataGridTextColumn Header="Barcode" Binding="{Binding Barcode}" Width="*" Visibility="{Binding Path=Data.CurrentProject.Settings.IsPoundlandGame, Source={StaticResource Proxy}, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"/>
                            <DataGridTextColumn Header="LVW Count" Binding="{Binding LvwWinnerCount}" Width="Auto"/>
                            <DataGridTextColumn Header="HVW Count" Binding="{Binding HvwWinnerCount}" Width="Auto"/>
                            <DataGridCheckBoxColumn Header="Online" Binding="{Binding IsOnlinePrize}" Width="Auto"/>
                            <DataGridCheckBoxColumn Header="Online Draw Only" Binding="{Binding IsOnlineDrawOnly}" Width="Auto" />
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </TabItem>
            <TabItem Header="Symbols" ToolTip="Define the standard graphical symbols that can appear in the games.">
                <DockPanel>
                    <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">
                        <Button Content="Import Symbols..." Command="{Binding ImportSymbolsCommand}" Margin="5,0" ToolTip="Replaces both symbol lists from a .json file."/>
                        <Button Content="Export Symbols..." Command="{Binding ExportSymbolsCommand}" Margin="5,0" ToolTip="Saves both symbol lists to a .json file."/>
                        <Button Content="Add Symbol" Command="{Binding AddSymbolCommand}" Margin="5,0" ToolTip="Adds a new symbol to the list."/>
                        <Button Content="Remove Selected" Command="{Binding RemoveSymbolCommand}" CommandParameter="{Binding SelectedItem, ElementName=SymbolsGrid}" ToolTip="Removes the currently selected symbol."/>
                    </StackPanel>
                    <DataGrid x:Name="SymbolsGrid" AutoGenerateColumns="False" ItemsSource="{Binding CurrentProject.AvailableSymbols}" CellEditEnding="DataGrid_CellEditEnding" CanUserAddRows="False" PreviewKeyDown="DataGrid_PreviewKeyDown">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width="Auto" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Symbol Name" Binding="{Binding DisplayText}" Width="*"/>
                            <DataGridTemplateColumn Header="Image Path (PDF)" Width="2*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBox Grid.Column="0" Text="{Binding ImagePath, UpdateSourceTrigger=PropertyChanged}" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                            <Button Grid.Column="1" Content="Browse..." Margin="5,0,0,0" Command="{Binding DataContext.BrowseForSymbolImageCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding}"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </TabItem>
            <TabItem Header="Game Symbols" ToolTip="Define the numeric symbols used by all 'Match Symbol to Prize' games.">
                <DockPanel>
                    <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">
                        <Button Content="Add Number" Command="{Binding AddNumericSymbolCommand}" Margin="5,0" ToolTip="Adds a new number to the project-wide numeric symbol list."/>
                        <Button Content="Remove Selected" Command="{Binding RemoveNumericSymbolCommand}" CommandParameter="{Binding SelectedItem, ElementName=GameSymbolsGrid}" ToolTip="Removes the currently selected number."/>
                    </StackPanel>
                    <DataGrid x:Name="GameSymbolsGrid" AutoGenerateColumns="False" ItemsSource="{Binding CurrentProject.NumericSymbols}" CellEditEnding="DataGrid_CellEditEnding" CanUserAddRows="False" PreviewKeyDown="DataGrid_PreviewKeyDown">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width="Auto" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Number Text" Binding="{Binding DisplayText}" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </TabItem>
        </TabControl>

        <GridSplitter Grid.Column="3" Width="5" HorizontalAlignment="Stretch" />

        <Grid Grid.Column="4" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MinHeight="150"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="*" />
                <RowDefinition Height="5"/>
                <RowDefinition Height="Auto" MinHeight="120"/>
            </Grid.RowDefinitions>

            <GroupBox Grid.Row="0" Header="Game Module Palette" ToolTip="Drag a game module from this list onto the designer below.">
                <ListBox ItemsSource="{Binding AvailableGameModules}" DisplayMemberPath="ModuleName" PreviewMouseLeftButtonDown="Palette_PreviewMouseLeftButtonDown" PreviewMouseMove="Palette_PreviewMouseMove">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource AccentForegroundBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </GroupBox>

            <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>

            <GroupBox Grid.Row="2" Header="Card Layout Designer" ToolTip="This canvas represents the scratch card. Drag items here from the palette. Right-click an item to change its order or remove it.">
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                    <Grid>
                        <ItemsControl x:Name="GameModulesItemsControl" ItemsSource="{Binding CurrentProject.Layout.GameModules}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas x:Name="CardLayoutCanvas" AllowDrop="True" Background="{StaticResource GridBrush}" MinWidth="800" MinHeight="600" DragEnter="CardLayoutCanvas_DragEnter" Drop="CardLayoutCanvas_Drop" PreviewMouseMove="CardLayoutCanvas_PreviewMouseMove" PreviewMouseLeftButtonDown="DesignerCanvas_PreviewMouseLeftButtonDown"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="Canvas.Left" Value="{Binding Position.X}"/>
                                    <Setter Property="Canvas.Top" Value="{Binding Position.Y}"/>
                                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ItemContainer_PreviewMouseLeftButtonDown"/>
                                    <EventSetter Event="PreviewMouseLeftButtonUp" Handler="ItemContainer_PreviewMouseLeftButtonUp"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type models:GameModule}">
                                    <Border x:Name="ModuleBorder" BorderBrush="{DynamicResource BorderBrush}" Background="{DynamicResource SecondaryBackgroundBrush}" BorderThickness="1" CornerRadius="3" Width="{Binding Size.Width}" Height="{Binding Size.Height}">
                                        <Border.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Duplicate" Command="{Binding DataContext.DuplicateModuleCommand, Source={x:Reference RootControl}}" CommandParameter="{Binding}"/>
                                                <MenuItem Header="Move Up" Command="{Binding DataContext.MoveModuleUpCommand, Source={x:Reference RootControl}}" CommandParameter="{Binding}"/>
                                                <MenuItem Header="Move Down" Command="{Binding DataContext.MoveModuleDownCommand, Source={x:Reference RootControl}}" CommandParameter="{Binding}"/>
                                                <Separator/>
                                                <MenuItem Header="Remove" Click="RemoveModule_Click"/>
                                            </ContextMenu>
                                        </Border.ContextMenu>
                                        <Grid>
                                            <StackPanel x:Name="DefaultDisplay" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <TextBlock Text="{Binding ModuleName}" HorizontalAlignment="Center"/>
                                                <TextBlock Text="{Binding GameNumber, StringFormat='(Game {0})'}" Foreground="{DynamicResource SubtleTextBrush}" FontSize="10" HorizontalAlignment="Center"/>
                                            </StackPanel>
                                            <Image x:Name="QrCodeDisplay" Source="{Binding Url, Converter={StaticResource StringToQrCodeImageConverter}}" Stretch="Uniform" Margin="5" Visibility="Collapsed"/>
                                        </Grid>
                                    </Border>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                            <Setter TargetName="ModuleBorder" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                                            <Setter TargetName="ModuleBorder" Property="BorderThickness" Value="2"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsOnlineBonusGame}" Value="True">
                                            <Setter TargetName="DefaultDisplay" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="QrCodeDisplay" Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <TextBlock Text="Drag a module from the palette to begin designing your card." HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" FontStyle="Italic" Foreground="{DynamicResource SubtleTextBrush}" IsHitTestVisible="False">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CurrentProject.Layout.GameModules.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Line x:Name="HorizontalGuide" Stroke="{DynamicResource AccentBrush}" StrokeDashArray="4 2" Visibility="Collapsed" SnapsToDevicePixels="True"/>
                        <Line x:Name="VerticalGuide" Stroke="{DynamicResource AccentBrush}" StrokeDashArray="4 2" Visibility="Collapsed" SnapsToDevicePixels="True"/>
                    </Grid>
                </ScrollViewer>
            </GroupBox>

            <GridSplitter Grid.Row="3" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>

            <GroupBox Grid.Row="4" ToolTip="Properties for the currently selected game module.">
                <GroupBox.Style>
                    <Style TargetType="GroupBox">
                        <Setter Property="Header" Value="Module Properties"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedModule, Converter={StaticResource ObjectToBooleanConverter}}" Value="True">
                                <Setter Property="Header" Value="{Binding SelectedModule.ModuleName, StringFormat='Properties for: {0}'}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </GroupBox.Style>
                <Grid>
                    <ContentControl Content="{Binding SelectedModule}">
                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedModule, Converter={StaticResource ObjectToBooleanConverter}}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type models:MatchSymbolToPrizeGame}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Label Grid.Row="0" Grid.Column="0" Content="Game Number:"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding GameNumber, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="1" Grid.Column="0" Content="No. of Symbols:"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding NumberOfSymbols, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="2" Grid.Column="0" Content="Winning Symbol:"/>
                                    <ComboBox Grid.Row="2" Grid.Column="1" Margin="2" ItemsSource="{Binding DataContext.CurrentProject.NumericSymbols, RelativeSource={RelativeSource AncestorType=UserControl}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding WinningSymbolId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextSearch.TextPath="DisplayText"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type models:MatchSymbolsInGridGame}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Label Grid.Row="0" Grid.Column="0" Content="Game Number:"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding GameNumber, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="1" Grid.Column="0" Content="Rows:"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Rows, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="2" Grid.Column="0" Content="Columns:"/>
                                    <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Columns, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="3" Grid.Column="0" Content="To Match:"/>
                                    <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding SymbolsToMatch, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type models:FindWinningSymbolGame}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Label Grid.Row="0" Grid.Column="0" Content="Game Number:"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding GameNumber, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="1" Grid.Column="0" Content="No. of Symbols:"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding NumberOfSymbolsSetter, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="2" Grid.Column="0" Content="Winning Symbol:"/>
                                    <ComboBox Grid.Row="2" Grid.Column="1" Margin="2" ItemsSource="{Binding DataContext.CurrentProject.AvailableSymbols, RelativeSource={RelativeSource AncestorType=UserControl}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding WinningSymbolId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextSearch.TextPath="DisplayText"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type models:OnlineBonusGame}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Label Grid.Row="0" Grid.Column="0" Content="Game Number:"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding GameNumber, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="1" Grid.Column="0" Content="Base URL:"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Url, UpdateSourceTrigger=PropertyChanged}" Margin="2" ToolTip="Enter the base URL for the QR code. A unique security code will be appended during generation." behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type models:MatchPrizesInGridGame}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Label Grid.Row="0" Grid.Column="0" Content="Game Number:"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding GameNumber, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="1" Grid.Column="0" Content="Rows:"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Rows, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="2" Grid.Column="0" Content="Columns:"/>
                                    <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Columns, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="3" Grid.Column="0" Content="Prizes to Match:"/>
                                    <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding PrizesToMatch, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type models:MatchPrizesInRowGame}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Label Grid.Row="0" Grid.Column="0" Content="Game Number:"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding GameNumber, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="1" Grid.Column="0" Content="Number of Rows:"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding NumberOfRows, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="2" Grid.Column="0" Content="Prizes per Row:"/>
                                    <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding PrizesPerRow, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="3" Grid.Column="0" Content="Prizes to Match:"/>
                                    <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding PrizesToMatchInRow, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type models:MatchSymbolsInRowGame}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Label Grid.Row="0" Grid.Column="0" Content="Game Number:"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding GameNumber, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="1" Grid.Column="0" Content="Number of Rows:"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding NumberOfRows, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="2" Grid.Column="0" Content="Symbols per Row:"/>
                                    <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding SymbolsPerRow, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="3" Grid.Column="0" Content="Symbols to Match:"/>
                                    <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding SymbolsToMatchInRow, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type models:ChristmasTreeGame}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Label Grid.Row="0" Grid.Column="0" Content="Game Number:"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding GameNumber, UpdateSourceTrigger=PropertyChanged}" Margin="2" behaviours:UndoableTextBoxBehavior.UndoRedoService="{Binding DataContext.UndoRedoService, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                    <Label Grid.Row="1" Grid.Column="0" Content="Winning Symbol:"/>
                                    <ComboBox Grid.Row="1" Grid.Column="1" Margin="2" ItemsSource="{Binding DataContext.CurrentProject.AvailableSymbols, RelativeSource={RelativeSource AncestorType=UserControl}}" DisplayMemberPath="DisplayText" SelectedValuePath="Id" SelectedValue="{Binding WinningSymbolId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextSearch.TextPath="DisplayText"/>
                                </Grid>
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                    <TextBlock Text="Select a module on the canvas to see its properties." HorizontalAlignment="Center" VerticalAlignment="Center" FontStyle="Italic" TextWrapping="Wrap" Foreground="{DynamicResource SubtleTextBrush}" IsHitTestVisible="False">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedModule, Converter={StaticResource ObjectToBooleanConverter}}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </GroupBox>
        </Grid>
    </Grid>
</UserControl>